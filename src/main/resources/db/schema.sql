--
-- PostgreSQL database dump
--

-- Dumped from database version 17.2
-- Dumped by pg_dump version 17.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: stock; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA stock;


ALTER SCHEMA stock OWNER TO postgres;

--
-- Name: add_ticker_history(integer, text); Type: PROCEDURE; Schema: stock; Owner: postgres
--

CREATE PROCEDURE stock.add_ticker_history(IN ticker_user_id integer, IN import_data text)
    LANGUAGE plpgsql
    AS $$
DECLARE
    ticker_name VARCHAR(10);
BEGIN
    SELECT import_data::jsonb->>'ticker' 
    INTO ticker_name;

    INSERT INTO ticker(ticker_id) 
    VALUES (ticker_name)
    ON CONFLICT (ticker_id) DO NOTHING;

    INSERT INTO ticker_history(user_id, ticker_id, trading_day, price_open, price_close, price_low, price_high)
    SELECT
        ticker_user_id,
        ticker_name,
        to_timestamp(r.t/1000)::date,
        r.o,
        r.c,
        r.l,
        r.h
    FROM 
        jsonb_to_recordset(import_data::jsonb->'results') AS r(
        o NUMERIC,
        c NUMERIC,
        h NUMERIC,
        l NUMERIC,
        t BIGINT
    )
    ON CONFLICT (user_id, ticker_id, trading_day) DO NOTHING;
END;
$$;


ALTER PROCEDURE stock.add_ticker_history(IN ticker_user_id integer, IN import_data text) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: ticker; Type: TABLE; Schema: stock; Owner: postgres
--

CREATE TABLE stock.ticker (
    ticker_id character varying(10) NOT NULL
);


ALTER TABLE stock.ticker OWNER TO postgres;

--
-- Name: ticker_history; Type: TABLE; Schema: stock; Owner: postgres
--

CREATE TABLE stock.ticker_history (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    ticker_id character varying(10) NOT NULL,
    trading_day date NOT NULL,
    price_open numeric(10,2) DEFAULT 0,
    price_close numeric(10,2) DEFAULT 0,
    price_low numeric(10,2) DEFAULT 0,
    price_high numeric(10,2) DEFAULT 0,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE stock.ticker_history OWNER TO postgres;

--
-- Name: ticker_history_id_seq; Type: SEQUENCE; Schema: stock; Owner: postgres
--

ALTER TABLE stock.ticker_history ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME stock.ticker_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: stock; Owner: postgres
--

CREATE TABLE stock.users (
    user_id integer NOT NULL,
    user_name character varying(100) NOT NULL,
    user_email character varying(100) NOT NULL,
    user_password character varying(100) NOT NULL
);


ALTER TABLE stock.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: stock; Owner: postgres
--

ALTER TABLE stock.users ALTER COLUMN user_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME stock.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: ticker_history ticker_history_pkey; Type: CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.ticker_history
    ADD CONSTRAINT ticker_history_pkey PRIMARY KEY (id);


--
-- Name: ticker_history ticker_history_user_id_ticker_id_trading_day_key; Type: CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.ticker_history
    ADD CONSTRAINT ticker_history_user_id_ticker_id_trading_day_key UNIQUE (user_id, ticker_id, trading_day);


--
-- Name: ticker ticker_pkey; Type: CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.ticker
    ADD CONSTRAINT ticker_pkey PRIMARY KEY (ticker_id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


--
-- Name: users users_user_email_key; Type: CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.users
    ADD CONSTRAINT users_user_email_key UNIQUE (user_email);


--
-- Name: ticker_history_user_id_ticker_id_trading_day_idx; Type: INDEX; Schema: stock; Owner: postgres
--

CREATE UNIQUE INDEX ticker_history_user_id_ticker_id_trading_day_idx ON stock.ticker_history USING btree (user_id, ticker_id, trading_day);


--
-- Name: ticker_history ticker_history_ticker_id_fkey; Type: FK CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.ticker_history
    ADD CONSTRAINT ticker_history_ticker_id_fkey FOREIGN KEY (ticker_id) REFERENCES stock.ticker(ticker_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: ticker_history ticker_history_user_id_fkey; Type: FK CONSTRAINT; Schema: stock; Owner: postgres
--

ALTER TABLE ONLY stock.ticker_history
    ADD CONSTRAINT ticker_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES stock.users(user_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

